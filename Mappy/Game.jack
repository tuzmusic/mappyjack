class Game {
  field boolean done;

  constructor Game new () {
    return this;
  }
  
  method void run () {
    var int counter;
    var int entitiesLen;
    var Array entities;
    var Entity entity; // keep track of current entity in the loop
    var char currentKey;
    var Entity mappy;
    
    let done = false;
    let counter = 0;

    let entitiesLen = 1; // update manually as entities are added. blah.
    let entities = Array.new(entitiesLen); 

    let mappy = createMappy();
    let entities[0] = mappy;
    
    // RUN LOOP
    while (~done) {
      let counter = 0;
      
      // READ INPUT
      let currentKey = Keyboard.keyPressed();
      if (currentKey = 130) { do mappy.set_horiz_velocity(-2); } // LEFT
      if (currentKey = 132) { do mappy.set_horiz_velocity(2); } // RIGHT
      if (currentKey = 0) { do mappy.set_horiz_velocity(0); } // RIGHT



      // DRAW ENTITIES
      while (counter < entitiesLen) {
        let entity = entities[counter];
        do entity.update();
        let counter = counter + 1;
      }    
      do Sys.wait(30);
    }

    // todo: DISPOSE!
    
    return;
  }

  method Entity createMappy () {
    var Entity mappy;
    let mappy = Entity.new(
      "mappy", // name
      20, // x
      20, // y
      0, // baseVel
      32, // height
      32  // width
    );

    return mappy;
  }
}