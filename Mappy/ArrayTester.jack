class ArrayTester {
  field ObjArray entities;

  method void printInfo(int index) {
    var Entity e;
    let e = entities.at(index);

    do Output.printString("entities.at(");
    do Output.printInt(index);
    do Output.printString(").name() = ");
    do U.printStrLn(e.get_name());

    return;
  }


  method void testArrays () {
    var Entity e;
    var String s;

    do entities.printLen(); // check initial empty length
    do U.printIntLn(entities); // check address
    
    // TEST PUSH
    do U.printStrLn("// TEST PUSH");
    do entities.push(Entity.createSimpleEntity("First"));
    do printInfo(0);
    do U.printStrLn("(^ check array contents after action ^)");

    do entities.push(Entity.createSimpleEntity("Second"));
    do printInfo(0);
    do printInfo(1);
    do entities.printLen();
    do U.printStrLn("(^ check array contents after action ^)");


    do entities.push(Entity.createSimpleEntity("Third"));
    do printInfo(0);
    do printInfo(1);
    do printInfo(2);
    do entities.printLen();
    do U.printStrLn("(^ check array contents after action ^)");

    // TEST POP
    do U.printStrLn("// TEST POP");
    let e = entities.pop();
    do printInfo(0);
    do printInfo(1);
    do entities.printLen();
    do U.printStrLn("(^ check array contents & length after action ^)");


    // TEST ERASE
    do U.printStrLn("// TEST ERASE at(0)");
    do entities.eraseAt(0);

    if (~entities.at(0)) {
      do U.printStrLn("entities.at(0) IS null");
    } else {
      do U.printStrLn("entities.at(0) IS NOT null");
    }

    do printInfo(1);
    do U.printStrLn("(^ check array contents after action ^)");


    return;
  }

  
  constructor ArrayTester new () {
    let entities = ObjArray.new();
    return this;
  }
  
}